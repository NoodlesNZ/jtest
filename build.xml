<?xml version="1.0" encoding="UTF-8"?>

<project name="ddcwww" default="build">
  <target name="build"
    depends="prepare,tools-parallel,phpunit-no-coverage"/>
   
  <target name="tools-parallel" description="Run tools in parallel">
    <parallel threadCount="2">
      <sequential>
        <antcall target="pdepend"/>
        <antcall target="phpmd-ci"/>
      </sequential>
    	<antcall target="lint"/>
      <antcall target="phpcs-ci"/>
    	<antcall target="phploc-ci"/>
    </parallel>
  </target>

  <target name="clean"
  	      unless="clean.done"
          description="Cleanup build artifacts">
    <delete dir="${basedir}/build/logs"/>
    <delete dir="${basedir}/build/pdepend"/>
  	<property name="clean.done" value="true"/>
  </target>

  <target name="prepare"
          unless="prepare.done"
  	      depends="clean"
          description="Prepare for build">
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/pdepend"/>
  	
  	<property name="prepare.done" value="true"/>
  </target>
 
  <target name="lint"
          unless="lint.done"
	        description="Perform syntax check of sourcecode files">
  
  	<apply executable="php" taskname="lint" failonerror="true">
  	   <arg value="-l" />

  	   <fileset dir="${basedir}/public_html">
  	    <include name="**/*.php" />
  	   	<include name="**/*.html" />
  	    <modified />
  	   </fileset>

  	  <fileset dir="${basedir}/tests">
  	    <include name="**/*.php" />
  	    <modified />
  	  </fileset>
  	</apply>

    <property name="lint.done" value="true"/>
  </target>

  <target name="phpcs-ci"
         description="Find coding standard violations using PHP_CodeSniffer">
    <exec executable="phpcs" output="/dev/null" taskname="phpcs">
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
      <arg value="--standard=${basedir}/build/phpcs.xml" />
      <arg value="--extensions=php,html" />
      <arg value="--ignore=include/magpierss/,sponsor/0029,min/,include/double_metaphone.php,include/geoip.php" />
    	<arg path="${basedir}/public_html" />
    	<arg path="${basedir}/tests" />
    </exec>
  </target>
 
	<target name="phploc-ci"
	        unless="phploc.done"
	        depends="prepare"
	        description="Measure project size using PHPLOC and log result in CSV and XML format. Intended for usage within a continuous integration environment.">
	  <exec executable="phploc" taskname="phploc">
	    <arg value="--count-tests" />
	    <arg value="--log-csv" />
	    <arg path="${basedir}/build/logs/phploc.csv" />
	    <arg value="--log-xml" />
	    <arg path="${basedir}/build/logs/phploc.xml" />
	    <arg path="${basedir}/public_html" />
	    <arg path="${basedir}/tests" />
	  </exec>

	  <property name="phploc.done" value="true"/>
	</target>
 
  <target name="pdepend"
          unless="pdepend.done"
          depends="prepare"
          description="Calculate software metrics using PHP_Depend and log result in XML format. Intended for usage within a continuous integration environment.">
    <exec executable="pdepend" taskname="pdepend">
      <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
      <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
      <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
      <arg value="--ignore=${basedir}/public_html/include/magpierss,${basedir}/public_html/sponsor/0029,${basedir}/public_html/min,${basedir}/public_html/include/geoip.php" />
      <arg path="${basedir}/public_html" />
    </exec>
  	
  	<property name="pdepend.done" value="true"/>
  </target>

  <target name="phpmd-ci"
  	      unless="phpmd.done"
  	      depends="prepare"
  	      description="Perform project mess detection using PHPMD and log result in XML format. Intended for usage within a continuous integration environment.">
    <exec executable="phpmd" taskname="phpmd">
    	<arg path="${basedir}/public_html" />
      <arg value="xml" />
      <arg value="${basedir}/build/phpmd.xml" />
      <arg value="--reportfile" />
      <arg value="${basedir}/build/logs/pmd.xml" />
      <arg value="--suffixes" />
      <arg value="php,html" />
      <arg value="--exclude" />
      <arg value="${basedir}/public_html/include/magpierss,${basedir}/public_html/sponsor/0029,${basedir}/public_html/min,${basedir}/public_html/include/geoip.php" />
    </exec>
  </target>
 
  <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
    <exec executable="phpcb">
      <arg value="--log" />
      <arg path="${basedir}/build/logs" />
      <arg value="--source" />
      <arg path="${basedir}/public_html" />
      <arg value="--output" />
      <arg path="${basedir}/build/code-browser" />
    </exec>
  </target>
	
	<target name="phpunit-no-coverage"
	        unless="phpunit.done"
	        depends="prepare"
	        description="Run unit tests with PHPUnit (without generating code coverage reports)">
	  <exec executable="phpunit" failonerror="true" taskname="phpunit">
	    <arg value="--configuration"/>
	    <arg path="${basedir}/tests/phpunit.xml"/>
	    <arg value="--no-coverage"/>
	  	<arg value="--log-junit"/>
	  	<arg path="${basedir}/build/logs/junit.xml"/>
	  </exec>

	  <property name="phpunit.done" value="true"/>
	</target>
	
	<target name="-check-failure">
	  <fail message="PHPUnit did not finish successfully">
	    <condition>
	      <not>
	        <equals arg1="${result.phpunit}" arg2="0"/>
	      </not>
	    </condition>
	  </fail>
	</target>
</project>
